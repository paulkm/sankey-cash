name: Publish to PyPI and TestPyPI
# Following: https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

on: push
# TODO: verify if main build will trigger on this
# on:
#   push:
#     branches:
#       - main

permissions:
  contents: write

jobs:

  test:
    name: Test ðŸ§ª
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with pycodestyle
      run: |
        pip install pycodestyle
        pycodestyle src/sankey_cashflow
    - name: Run tests
      run: |
        pip install coverage pytest
        coverage run -m pytest
        coverage report
        coverage xml
        coverage html
    - name: Generate badges
      run: |
        pip install genbadge defusedxml
        genbadge coverage -i coverage.xml -o htmlcov/coverage-badge.svg
    - name: Write coverage to gh-pages
      if: success() || failure()
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: htmlcov

  build:
    name: Build distribution ðŸ”¨
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Update dev version
      if: github.event_name == 'push' #  && github.ref == 'refs/heads/main'
      shell: bash
      run: |
        echo ${{ github.sha }} | cut -c1-8 > src/VERSION
    - name: Update version
      if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags/')
      shell: bash
      run: |
        echo ${{ github.event.release.tag_name }} > src/VERSION
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish distribution ðŸ“¦ to PyPI
    #if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags/')  # Only push on tagged releases
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/sankey-cash
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  # TODO: signed distribution

  publish-to-testpypi:
    name: Publish ðŸ“¦ to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/sankey-cash

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/  